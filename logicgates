	In peoples’ everyday lives, the concepts of “and” and “or” are commonplace. The concepts of “nand” and “nor,” which mean “not and” and “not or” respectively, are very rare outside of technical fields. However, the logic gates of NAND and NOR are extremely important in digital circuit design, even more so than AND and OR. Despite this seeming unintuitive, NAND and NOR gates are the fundamental building blocks of all digital circuits.
	Unlike AND and OR gates, NAND and NOR are both functionally complete. This means that any logic expression can be implemented with only using NAND gates, or only using NOR gates. For instance, in invertor, or a NOT gate, can be created by wiring both inputs of a NAND to the input you want to invert. AND and OR gates do not have this property because they have no way of inverting data. Because of this property of functional completeness, NAND and NOR gates remove the need for AND and OR gates while the same is not true vice versa.
	Another point in favor of NAND and NOR gates is that they require fewer transistors than their counterparts. A NMOS NAND or NOR gate only uses two transistors and a CMOS NAND or NOR gate requires four. On the other hand, CMOS AND and OR gates require six transistors each. As a result, the cost of producing AND and OR gates is significantly higher than that of producing NAND and NOR. Additionally, NAND and NOR gates have less time delay because they require fewer transistors.
	NAND and NOR gates are also used more frequently than their counterparts in common circuits like latches and flip-flops. For instance, an SR-latch using the fewest logic gates possible consists of just two NOR gates. This implementation is usually optimal because neither input needs to be inverted. Also a gated D-latch consists of just four NAND gates. These latches are fundamental components of flip-flops, which are used in countless types of digital circuits, such as counters.
	Humans understand AND and OR gates easily because we use the concepts of “and” and “or” in our everyday lives. However, in terms of circuitry, they are not ideal. Any logic function can be created using only NAND gates or NOR gates, including inverters and XORs. NAND and NOR gates also use only two transistors, while AND and OR require three. In conclusion, using NAND and NOR gates over AND and OR in circuits is advantageous in their performance and simplicity.
